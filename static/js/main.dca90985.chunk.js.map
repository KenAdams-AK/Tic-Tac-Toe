{"version":3,"sources":["components/Square.js","components/PlayField.js","components/Game.js","calculateWinner.js","App.js","index.js"],"names":["Square","value","onClick","style","className","PlayField","squares","map","square","i","key","Game","useState","Array","fill","move","setMove","moveNumber","setMoveNumber","xIsNext","setXIsNext","isDraw","setIsDraw","winner","lines","length","a","b","c","calculateWinner","xO","useEffect","movePoint","slice","current","window","location","reload","App","ReactDOM","render","document","getElementById"],"mappings":"mNAYeA,MAVf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAClBC,EAAQF,EAAK,kBAAcA,GAAU,UAE3C,OACC,4BAAQG,UAAWD,EAAOD,QAASA,GACjCD,ICMWI,MAVf,YAA0C,IAArBC,EAAoB,EAApBA,QAASJ,EAAW,EAAXA,QAC7B,OACC,yBAAKE,UAAU,aACbE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACZ,kBAAC,EAAD,CAAQC,IAAKD,EAAGR,MAAOO,EAAQN,QAAS,kBAAMA,EAAQO,WCyC3CE,MA5Cf,WACC,MAAwBC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAhD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEMC,ECVA,SAAyBjB,GAW/B,IAVA,IAAMkB,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CACtC,kBAAkBe,EAAMf,GAAxB,GAAOiB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACrE,OAAOtB,EAAQoB,GAGjB,OAAO,KDPQG,CAAgBd,EAAKE,IAC9Ba,EAAKX,EAAU,IAAM,IAqB3B,OAnBAY,qBAAU,WACLd,EAAa,IAAMM,GACtBD,GAAU,KAET,CAACL,EAAYM,IAgBf,yBAAKnB,UAAU,QACbiB,EACA,qCAEA,4BAAKE,EAAM,kBAAcA,EAAd,4BAA0CO,IAGtD,kBAAC,EAAD,CAAWxB,QAASS,EAAKE,GAAaf,QArBpB,SAACO,GACpB,IAAMuB,EAAYjB,EAAKkB,MAAM,EAAGhB,EAAa,GACvCiB,EAAUF,EAAUf,GACpBX,EAAO,YAAO4B,GAEhBX,GAAUjB,EAAQG,KAEtBH,EAAQG,GAAKqB,EACbd,EAAQ,GAAD,mBAAKgB,GAAL,CAAgB1B,KACvBY,EAAcc,EAAUP,QACxBL,GAAYD,OAYX,4BAAQf,UAAU,UAAUF,QAAS,kBAAMiC,OAAOC,SAASC,WAA3D,aE7BYC,MARf,WACC,OACC,yBAAKlC,UAAU,OACd,kBAAC,EAAD,QCDHmC,IAASC,OACP,kBAAC,EAAD,MACDC,SAASC,eAAe,U","file":"static/js/main.dca90985.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square({ value, onClick }) {\r\n\tconst style = value ? `squares ${value}` : 'squares';\r\n\r\n\treturn (\r\n\t\t<button className={style} onClick={onClick}>\r\n\t\t\t{value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nfunction PlayField({ squares, onClick }) {\r\n\treturn (\r\n\t\t<div className=\"PlayField\">\r\n\t\t\t{squares.map((square, i) => (\r\n\t\t\t\t<Square key={i} value={square} onClick={() => onClick(i)} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlayField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { calculateWinner } from '../calculateWinner';\r\nimport PlayField from './PlayField';\r\n\r\nfunction Game() {\r\n\tconst [move, setMove] = useState([Array(9).fill(null)]);\r\n\tconst [moveNumber, setMoveNumber] = useState(0);\r\n\tconst [xIsNext, setXIsNext] = useState(true);\r\n\tconst [isDraw, setIsDraw] = useState(false);\r\n\r\n\tconst winner = calculateWinner(move[moveNumber]);\r\n\tconst xO = xIsNext ? 'X' : 'O';\r\n\r\n\tuseEffect(() => {\r\n\t\tif (moveNumber > 8 && !winner) {\r\n\t\t\tsetIsDraw(true);\r\n\t\t}\r\n\t}, [moveNumber, winner]);\r\n\r\n\tconst handleClick = (i) => {\r\n\t\tconst movePoint = move.slice(0, moveNumber + 1);\r\n\t\tconst current = movePoint[moveNumber];\r\n\t\tconst squares = [...current];\r\n\r\n\t\tif (winner || squares[i]) return;\r\n\r\n\t\tsquares[i] = xO;\r\n\t\tsetMove([...movePoint, squares]);\r\n\t\tsetMoveNumber(movePoint.length);\r\n\t\tsetXIsNext(!xIsNext);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Game\">\r\n\t\t\t{isDraw ? (\r\n\t\t\t\t<h2>Draw!</h2>\r\n\t\t\t) : (\r\n\t\t\t\t<h2>{winner ? `Winner: ${winner}!` : `Next Player: ${xO}`}</h2>\r\n\t\t\t)}\r\n\r\n\t\t\t<PlayField squares={move[moveNumber]} onClick={handleClick} />\r\n\t\t\t<button className=\"restart\" onClick={() => window.location.reload()}>\r\n\t\t\t\tRestart\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Game from './components/Game';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Game />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n\t\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}